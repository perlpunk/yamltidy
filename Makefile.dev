.PHONY: update-yts delete-yts cover clean-cover test testp testv

yts:
	git clone https://github.com/yaml/yaml-test-suite --depth 1 -b data-2020-08-01 yts

reclone-yts: delete-yts yts

delete-yts:
	rm -rf yts

cover:
	HARNESS_PERL_SWITCHES="-MDevel::Cover=+ignore,local,+ignore,^t/,+ignore,^xt/" prove -lr t
	cover

clean-cover:
	rm -r cover_db

test:
	prove -lr t

testp:
	prove -lr -j9 t

testv:
	prove -lrv t

analyze:
	perl etc/utils/analyze-tests.pl
generate:
	perl etc/utils/generate.pl
highlight:
	perl etc/utils/html.pl
clean-generated:
	rm -r etc/utils/generated

gh-pages:
	git worktree add gh-pages gh-pages

gh-pages-status: gh-pages
	cd gh-pages && git status

gh-pages-diff: gh-pages
	cd gh-pages && git diff

gh-pages-commit: gh-pages
	cd gh-pages && git add . && git commit -m "Generate HTML"

gh-pages-push: gh-pages
	cd gh-pages && git push

gh-pages-generate: analyze generate highlight gh-pages-copy

tidy-examples:
	cd etc/html-examples && \
	yamltidy index/spaces.yaml -c index/spaces-cfg.yaml >index/spaces.yaml.tdy && \
	yamltidy index/indent.yaml -c index/indent-cfg1.yaml >index/indent.yaml.tdy && \
	yamltidy index/indent2.yaml -c index/indent-cfg2.yaml >index/indent2.yaml.tdy && \
	yamltidy index/quoting1.yaml -c index/quoting1-cfg.yaml >index/quoting1.yaml.tdy && \
	yamltidy index/quoting2.yaml -c index/quoting2-cfg.yaml >index/quoting2.yaml.tdy && \
	yamltidy index/serialize-aliases1.yaml -c index/serialize-aliases-cfg.yaml >index/serialize-aliases1.yaml.tdy && \
	yamltidy index/serialize-aliases2.yaml -c index/serialize-aliases-cfg.yaml >index/serialize-aliases2.yaml.tdy && \
	yamltidy index/header.yaml -c index/header-cfg.yaml >index/header.yaml.tdy

static:
	perl etc/utils/static.pl

gh-pages-copy:
	rm -r gh-pages/*
	cp -r etc/html/* gh-pages/
	cp etc/utils/generated/static/index.html gh-pages/

docker-base:
	cd etc/docker && docker build -t yamltidy-base -f Dockerfile.base .

docker-build:
	rm -rf etc/docker/perl5
	mkdir etc/docker/perl5
	cd etc/docker && docker run -it --rm --user $$(id -u) -v$(PWD):/repo -v$(PWD)/etc/docker/perl5:/tmp/yamltidy  yamltidy-base /repo/etc/docker/install-yamltidy.sh

docker:
	cd etc/docker && docker build -t perlpunk/yamltidy .

pod:
	appspec pod etc/spec.yaml >lib/yamltidy.pod
